# If you see the route handlers 
  # you can also see that this table name is exposed as an environment variable that is consumed by our DynamoDB client


service: RestApi23    # service name will be RestApi23

frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs12.x
  environment:
    DYNAMODB_TABLE: ${self:service}Table    # dynamo table name ------> RestApi23Table
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
        # resource name -----> arn:aws:dynamodb:

functions:                  # 5 functions ------------> meaning 5 lambdas will be created
  createUser: # lambda functionName
    handler: routes/users.createUser # this code will be triggered, when the below event happens
    # events are the things that trigger your functions to run.
    events:
      - http:
          path: user
          method: post
          cors: true

  updateUser:
    handler: routes/users.updateUser
    events:
      - http:
          path: user/{id}
          method: put
          cors: true

  deleteUser:
    handler: routes/users.deleteUser
    events:
      - http:
          path: user/{id}
          method: delete
          cors: true

  getUser:
    handler: routes/users.getUser
    events:
      - http:
          path: user/{id}
          method: get
          cors: true

  getUsers:
    handler: routes/users.getUsers
    events:
      - http:
          path: user
          method: get
          cors: true

resources:
  Resources:
    TodosDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}