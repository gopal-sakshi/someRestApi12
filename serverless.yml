# If you see the route handlers 
  # you can also see that this table name is exposed as an environment variable that is consumed by our DynamoDB client


service: RestApi23    # service name will be RestApi23

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs12.x
  profile: dynamoLocal23
  environment:
    DYNAMODB_TABLE: ${self:service}Table    # dynamo table name ------> RestApi23Table
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      # Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
      Resource: "*"
        # resource name -----> arn:aws:dynamodb:

custom:
  stage: ${opt:stage, self:provider.stage}
  serverless-offline:
    httpPort: 4000
    websocketPort: 4001
    lambdaPort: 4002

functions:                  # 5 functions ------------> meaning 5 lambdas will be created
  createUser: # lambda functionName
    handler: routes/users.createUser # this code will be triggered, when the below event happens
    # events are the things that trigger your functions to run.
    events:
      - http:
          path: user
          method: post
          cors: true

  updateUser:
    handler: routes/users.updateUser
    events:
      - http:
          path: user/{id}
          method: put
          cors: true

  deleteUser:
    handler: routes/users.deleteUser
    events:
      - http:
          path: user/{id}
          method: delete
          cors: true

  getUser:
    handler: routes/users.getUser
    events:
      - http:
          path: user/{id}
          method: get
          cors: true

  getUsers:
    handler: routes/users.getUsers
    events:
      - http:
          path: user
          method: get
          cors: true

  hello33:
    handler: handler.hello23

resources:
  Resources: ${file(user.yml)}

package:
  exclude:
    node_modules/serverless-offline